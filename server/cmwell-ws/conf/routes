# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


GET         /_traffic         trafficshaping.TrafficHandler.handleThresholdFactor
GET         /_backpressure    controllers.BackPressureToggler.handleBackpressure
GET         /_timeout         trafficshaping.TrafficHandler.handleTimeout
GET         /_types-cache     controllers.Application.handleTypesCacheGet
GET         /_login           controllers.LoginHandler.login

# SAML POC
#GET         /_sso             controllers.LoginHandler.sso

GET         /_auth/*action    controllers.Application.handleAuthGET(action)
GET         /_hcn             controllers.Application.handlePoisonPill
GET         /_tbg             controllers.NbgController.handleToggle
GET         /_cas/*uuid       controllers.Application.handleRawRow(uuid)
GET         /_ll              controllers.LogLevelHandler.handleSetLogLevel
GET         /_consume         controllers.Application.handleConsumeRoute
GET         /_bulk-consume         controllers.Application.handleBulkConsumeRoute
GET         /_iterate         controllers.Application.handleScrollRoute
GET         /_cssh            controllers.Application.handleCssh
GET         /_csshx            controllers.Application.handleCsshx
GET         /_null            controllers.NullHandler.handle
POST        /_null            controllers.NullHandler.handle

GET         /_track/*tid      controllers.Application.handleTrack(tid)

#SAML POC
#GET         /callback         org.pac4j.play.CallbackController.callback
#POST        /callback         org.pac4j.play.CallbackController.callback

# Map static resources from the /public folder to the /assets URL path
GET           /sys123/*file        controllers.Assets.at(path="/public/sys", file)
GET           /_*page           controllers.Help.handleHelp(page)

# catch any
GET         /                       controllers.Application.handleGET(path = "")
GET         /monitor/requests/*path controllers.Application.requestDetailedView(path)
GET         /monitor/start          controllers.Application.startRequestMonitoring
GET         /monitor/stop           controllers.Application.stopRequestMonitoring
GET         /health                 controllers.Health.getIndex
GET         /health/cas             controllers.Health.getCassandaraHealth
#GET        /health/cas_cfh         controllers.Health.getCassandaraCfHistogram
GET         /health/es              controllers.Health.getElasticsearchHealth
GET         /health/es_top          controllers.Health.getElasticsearchTop
GET         /health/es_stats        controllers.Health.getElasticsearchStats
GET         /health/es_seg          controllers.Health.getElasticsearchSegments
GET         /health/es_status       controllers.Health.getElasticsearchStatus
GET         /health/kafka           controllers.Health.getKafkaStatus
GET         /health/zk-stat         controllers.Health.getZkStat
GET         /health/zk-ruok         controllers.Health.getZkRuok
GET         /health/zk-mntr         controllers.Health.getZkMntr
GET         /health/ws              controllers.Health.getWsHealth
GET         /ws/_out                controllers.OutputHandler.handleWebSocket(format: String)
GET         /ii/*uuid               controllers.Application.handleUuidGET(uuid)
GET         /zz                     controllers.Application.handleZzGET(key = "")
GET         /zz/*key                controllers.Application.handleZzGET(key)
GET         /proc                   controllers.Application.handleProcGET(path = "/proc")
GET         /proc/                  controllers.Application.handleProcGET(path = "/proc")
GET         /proc/*path             controllers.Application.handleProcGET(path)
GET         /meta/quad/Y213ZWxsOi8vbWV0YS9zeXMjcGFydGl0aW9u*base64             controllers.Application.handleMetaQuad(base64)
GET         /*path                  controllers.Application.handleGET(path)
POST        /_in                    controllers.InputHandler.handlePost(format: String)
POST        /_ow                    controllers.InputHandler.handlePostForDCOverwrites
POST        /_out                   controllers.OutputHandler.handlePost(format: String)
PUT         /_out                   controllers.OutputHandler.handlePost(format: String)
POST        /_cmd                   controllers.CommandHandler.handlePost(op: String)
POST        /_sp                    controllers.SpHandlerController.handleSpPost(format = "")
POST        /_sp/*format            controllers.SpHandlerController.handleSpPost(format: String)
POST        /_sparql                controllers.SpHandlerController.handleSparqlPost(format = "")
POST        /_ssparql               controllers.OpenRdfSpHandler.handleSsparqlPost
POST        /zz/*uzid               controllers.Application.handleZzPost(uzid)
POST        /*path                  controllers.Application.handlePost(path)
PUT         /*path                  controllers.Application.handlePost(path)

DELETE      /*path                  controllers.Application.handleDELETE(path)



