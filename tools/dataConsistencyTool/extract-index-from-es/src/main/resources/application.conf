# The configuration parameters are mostly about getting the blocking factors such that we
# use the maximum fetch size from es (normally configured at 10000 documents), while not
# overflowing the akka.http.client.parsing.max-content-length size.
# This configuration assumes that the JVM was started with 31GB of memory, and that
# 24 threads will be used concurrently.

# Given that we have an estimate of 10000 bytes for the largest document, this configuration
# should be able to handle a chunk of documents where the average document size is 10000,
# while still fetching the maximum number of documents. If the documents are substantially larger,
# you may need to change the fetch-size-index-with-complete-document to avoid overflowing the
# http buffer.

akka {
  http {
    client {
      parsing {
        # Increase max-content-length to allow larger chunks of data to be read from es.
        # The default is 8m.
        max-content-length = 128m
      }
    }
  }
}

extract-index-from-es {

  # The timeout for opening a scroll or fetching scroll data
  read-timeout = 60s

  # The timeout for writing a chunk of data to the _bulk API.
  # Were seeing some timeouts at 10s, so give it a bit more time so that a slow response doesn't
  # fail the entire copy.
  bulk-index-write-timeout = 60s

  # The maximum number of documents/infotons to fetch from ES at a time.
  # This is configured as index.max_result_window in ES, and should be considered a hard limit.
  maximum-fetch-size = 10000

  # The number of documents (infotons) sent to the bulk API in a single request.
  bulk-index-chunk-size = 10000

  # The number of megabytes to buffer before flushing CSV data.
  csv-write-chunk-size = 1000000

  # The maximum number of attempts to read data before giving up.
  max-read-attempts = 40

  # These estimates of the returned document size should be accurate for all CM-Well instances
  # since filtering is applied to the document fields returned.
  # These estimates were gathered by observation.
  # These sizes are small enough that reading the maximum-fetch-size documents each time is always possible.
  fetch-size-index-with-uuid-only = 113
  fetch-size-index-with-system-fields = 368
  fetch-size-index-with-uuid-lastModified-path = 200 # This is a guess

  # This estimate of the returned (complete) document size will vary according to the actual data in the
  # CM-Well instance. If extracting complete documents fails with an EntityStreamSizeException, you may need
  # to reduce this number (or increase the JVM memory or the http max-content-length size).
  fetch-size-index-with-complete-document = 10000
}
